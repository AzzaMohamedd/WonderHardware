@model IEnumerable<WishListVM>
@{
    ViewData["Title"] = "WishList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="section">
    <!-- container -->
    <div class="container">
        <!-- row -->
        <div class="row">

            <div id="aside" class="col-md-3">
                <!-- /store top filter -->
                <!-- product -->
                <div class="aside" id="box">
                    <h2 class="aside-title">WishList (@Model.Count()) items</h2>
                    <div class="checkbox-filter">

                        <div class="input-checkbox ">
                            <label style="font-size: 14px; display: block; cursor: auto; ">
                                <span></span>
                                Motherboard :
                                <small>(@Model.Where(x => x.ProductCode.StartsWith("M")).Count()) items</small>
                            </label>
                            <label style="font-size: 14px; display: block; cursor: auto; ">
                                <span></span>
                                Processor :
                                <small>(@Model.Where(x => x.ProductCode.StartsWith("Pr")).Count()) items</small>
                            </label>
                            <label style="font-size: 14px; display: block; cursor: auto; ">
                                <span></span>
                                HDD :
                                <small>(@Model.Where(x => x.ProductCode.StartsWith("H")).Count()) items</small>
                            </label>
                            <label style="font-size: 14px; display: block; cursor: auto; ">
                                <span></span>
                                RAM :
                                <small>(@Model.Where(x => x.ProductCode.StartsWith("R")).Count()) items</small>
                            </label>
                            <label style="font-size: 14px; display: block; cursor: auto; ">
                                <span></span>
                                Graphics Card :
                                <small>(@Model.Where(x => x.ProductCode.StartsWith("V")).Count()) items</small>
                            </label>
                            <label style="font-size: 14px; display: block; cursor: auto; ">
                                <span></span>
                                SSD :
                                <small>(@Model.Where(x => x.ProductCode.StartsWith("S")).Count()) items</small>
                            </label>
                            <label style="font-size: 14px; display: block; cursor: auto; ">
                                <span></span>
                                Power Supply :
                                <small>(@Model.Where(x => x.ProductCode.StartsWith("PS")).Count()) items</small>
                            </label>
                            <label style="font-size: 14px; display: block; cursor: auto; ">
                                <span></span>
                                Case :
                                <small>(@Model.Where(x => x.ProductCode.StartsWith("C")).Count()) items</small>
                            </label>

                        </div>
                    </div>
                </div>

                <!-- /product -->
            </div>
            <div id="store" class="col-md-9">
                <!-- /store top filter -->
                @if (Model.Count() != 0)
                {
                    foreach (var item in Model)
                    {
                        if (item.IsAvailable == "Not Available")
                        {
                            <i class="fa-solid fa-bell-on"></i><h4>Product <span style="color: #D10024">@item.ProductName</span> is no longer available</h4>
                        }
                    }
                    foreach (var item in Model)
                    {
                        if (item.IsAvailable != "Not Available")
                        {
                            <div class="col-md-12 row" style="width: 90%">
                                <div class="product row" style="display: flex;">

                                    <div class="product-img col-md-3" style=" width: 220px;">
                                        <img src="~/img/product01.png" alt="">
                                    </div>
                                    @if (item.IsAvailable == "Out Of Stock")
                                    {
                                        <div class="product-body col-md-5" style="text-align:left">
                                            <h3 class="product-name" style="margin-top: 10%; font-size: 17px;"><a href="javascript:gotoDetails('@item.ProductCode')">@item.ProductName </a> <span style="color : #D10024">(Out of stock)</span> </h3>

                                            <h4 class="product-price"><span class="price">@item.ProductPrice</span> <del class="product-old-price">LE</del></h4>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="add-to-cart" style="cursor: auto; background-color: #1e1f2900; height: 188px; ">
                                                @*unclickable button*@
                                                <button style="background-color: grey; box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%); margin-top: 15%;" class="add-to-cart-btn disabled"> add to cart</button>
                                                <br />
                                                <button onclick="DeleteFromWL('@item.ProductCode')" style=" box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%); margin-top: 10%;" class="add-to-cart-btn"><i class="fa fa-trash"></i> Remove</button>
                                            </div>
                                        </div>
                                    }

                                    else if (item.IsAvailable != "Not Available")
                                    {
                                        <div class="product-body col-md-5" style="text-align:left">
                                            <h3 class="product-name" style="margin-top: 10%; font-size: 17px;"><a href="javascript:gotoDetails('@item.ProductCode')">@item.ProductName</a></h3>
                                            <h4 class="product-price"><span class="price">@item.ProductPrice</span> <del class="product-old-price">LE</del></h4>
                                        </div>
                                        <div class="col-md-4">

                                            <div class="add-to-cart" style="background-color: #1e1f2900; height: 188px; ">
                                                <button onclick="AddToCart({ Image: '', Name: '@item.ProductName', Code: '@item.ProductCode', Price: @item.ProductPrice , Quantity: 1 , ,DBQuantity : @item.Quantity })" style=" box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%); margin-top: 15%;" class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i> add to cart</button>
                                                <br />
                                                <button onclick="DeleteFromWL('@item.ProductCode')" style=" box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%); margin-top: 10%;" class="add-to-cart-btn"><i class="fa fa-trash"></i> Remove</button>
                                            </div>

                                            @*<a class="col-sm-offset-6" style="color: #D10024; text-transform: uppercase; "><i class="fa fa-trash"></i> Remove</a>*@
                                        </div>
                                    }

                                </div>

                            </div>
                        }

                    }
                }
                else
                {
                    <img src="/img/Index/wishlist(6).png" style="border-radius: 50%;width: 100px;margin-left: auto;margin-right: auto;display: block;" />;
                    <br />
                    <div style="text-align: center; display: block; font-size: 18px;"><strong> You haven’t added any item in WishList yet! </strong></div>;
                    <br />
                    <div style="text-align: center;display: block;">Found something you like? Tap on the heart shaped icon next to the item to add it to your wishlist. All your saved items will appear here.</div>;
                    <br />
                    <a class="primary-btn order-submit" href="/Home/Index" style="margin-left: auto;margin-right: auto;display: block;width: 35%;">Continue Shopping</a>;
                }

            </div>
        </div>
    </div>
</div>
<script src="~/js/jquery.min.js"></script>
<script src="~/js/bootstrap.min.js"></script>
<script src="~/js/slick.min.js"></script>
<script src="~/js/nouislider.min.js"></script>
<script src="~/js/jquery.zoom.min.js"></script>
<script src="~/js/main.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

<script>
    function DeleteFromWL(ProductCode) {
        $.ajax({
            type: "POST",
            url: "/Home/DeleteFromWL?ProductCode=" + ProductCode,
            dataType: "json",
            success: function (result) {
                if (result == "Deleted Done") {
                    toastr.success('Deleted Done.', '', { timeOut: 7000 });
                    setTimeout(function () {
                        location.reload();
                    }, 1500);
                }
                else if (result == "Error") {
                    toastr.success('Something Wrong , Try Again.', '', { timeOut: 7000 });
                }

            }
        });
    }
    function AddToCart(Product) {
        debugger;
        var cart = getItemStorage("Cart") || [];
        let counter = 0;
        if (cart.length == 0) {
            setItemStorage("Cart", cart);
            addValueToItemStorage("Cart", Product);
            toastr.success('Done', '', { timeOut: 7000 });
            setTimeout(function () {
                location.reload();
            }, 1500);
        }
        else {
            $.each(cart, function (key, item) {
                if (!(item.Code == Product.Code)) {
                    counter++;
                    if (counter == cart.length) {
                        setItemStorage("Cart", cart);
                        addValueToItemStorage("Cart", Product);
                        toastr.success('Done', '', { timeOut: 7000 });
                        setTimeout(function () {
                            location.reload();
                        }, 1500);
                    }
                }
                else {
                    toastr.error('You Choose This Product Before!!', '', { timeOut: 7000 });
                }
            });

        }
    }


    function gotoDetails(ProductCode) {
        debugger;
        if (ProductCode.startsWith("S")) {
            window.location = "/Home/SsdDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("R")) {
            window.location = "/Home/RamDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("C")) {
            window.location = "/Home/CaseDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("G")) {
            window.location = "/Home/GraphicsCardDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("PS")) {
            window.location = "/Home/PowerSupplyDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("P")) {
            window.location = "/Home/ProcessorDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("M")) {
            window.location = "/Home/MotherboardDetails?code=" + ProductCode
        } else if (ProductCode.startsWith("H")) {
            window.location = "/Home/HddDetails?code=" + ProductCode
        }
    }

    //start statement of LocalStorage
    function setItemStorage(itemKey, itemValue) {
        localStorage.setItem(itemKey, JSON.stringify(itemValue));
    }
    function getItemStorage(itemKey) {
        return JSON.parse(localStorage.getItem(itemKey));
    }
    function addValueToItemStorage(itemKey, val) {
        let item = getItemStorage(itemKey);
        item.push(val);
        setItemStorage(itemKey, item);
    }
</script>