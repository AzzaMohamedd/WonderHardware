@{
    ViewData["Title"] = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<br />
<br />
<div id="content" class="site-content">
    <div id="primary" class="content-area">
        <main id="main" class="site-main">
            <div class="cart-main">
                <div class="container">
                    <div class="col-md-12">
                        <div class="page type-page status-publish hentry">
                            <div class="entry-content">
                                <div class="woocommerce table-tabs" id="responsiveTabs">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><b class="arrow-up"></b><a data-toggle="tab" href="#sectionA">Cart (<span class="counter">0</span>) </a></li>
                                    </ul>
                                    <div class="tab-content">
                                        <div id="sectionA" class="tab-pane fade in active">
                                            <form>
                                                <div class="col-md-offset-9" style="text-align: center;">
                                                    <label class="form-control">Total Price(<span class="TotalItems">0</span>) : <span id="TotalPrice">0</span> LE</label>
                                                </div>
                                                <div class="dbody">
                                                    <table class="table table-hover" style="border-top:hidden">

                                                        <tbody class="tbody">
                                                        </tbody>
                                                    </table>
                                                    <a class="primary-btn order-submit" style="float: right; box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%);" href="/Home/CheckOut">Check Out(<span class="TotalItems">0</span>)</a>                                                </div>
                                                
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div><!-- .entry-content -->
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>
<br />
<br />
<br />
<br />
<script src="~/js/jquery.min.js"></script>
<script src="~/js/bootstrap.min.js"></script>
<script src="~/js/slick.min.js"></script>
<script src="~/js/nouislider.min.js"></script>
<script src="~/js/jquery.zoom.min.js"></script>
<script src="~/js/main.js"></script>
<script src="~/js/Wonder.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<script>
    var z = getItemStorage("Cart") || [];
    $(document).ready(function () {
        debugger;
        var html = '';
        var totalprice = 0;
        var totalproducts = 0;
        if (z.length == 0) {
            debugger;
            html += '<img src="/img/Index/download.png" style="border-radius: 50%;width: 100px;margin-left: auto;margin-right: auto;display: block;"/>';
            html += '<br/><div style="text-align: center;display: block;"><strong>Your cart is empty</strong></div><br/>';
            html += '<a class="primary-btn order-submit" href="/Home/Index" style="margin-left: auto;margin-right: auto;display: block;width: 35%;">Start Shopping</a>';
            $('.dbody').html(html);
        }
        else {
            $.each(z, function (key, item) {
                totalprice = totalprice + (item.Quantity * item.Price);
                totalproducts = totalproducts + (item.Quantity * 1);
                debugger;
                html += '<tr class="cart_item" style="text-align: center;">';
                html += '<td style="vertical-align: middle;" data-title="cbox" class="product-cbox col-md-1">';
                html += '<a href="javascript:remove(' + "'" + item.Code + "'" + ')" data-toggle="blog-tags" data-placement="top" title="Remove">';
                html += '<i class="fa fa-trash" style="font-size:x-large; "></i></a></td >';
                html += '<td style="vertical-align: middle;" data-title="Image" class="product-Image col-md-1">';
                html += '<div class="product-detail">';
                html += '<div class="col-md-3"><img style="height: 111px;" src="/img/product01.png" alt="cart-product-1"/></div>';
                html += '</td>';
                html += '<td style="vertical-align: middle;" data-title="Product" class="product-name col-md-5">';
                html += '<div class="col-md-8"><div><a href="javascript:gotoDetails(' + "'" + item.Code + "'" + ')"><strong>' + item.Name + '</strong></a></div>';
                html += '<div><strong>Price: </strong>' + item.Price + ' LE</div></div>';
                html += '</div>';
                html += '</td>';
                html += '<td style="vertical-align: middle;" data-title="action" class="product-action col-md-2">';
                html += '<div class="dropdown">';
                html += '<div class="col-md-7">';
                html += '<input style="width: 70px;" data-item="' + key + '" type="number" value="' + item.Quantity + '">';
                html += '</div>';
                html += '<div class="col-md-2">';
                html += '<a href="javascript:go(' + key + ')"><i class="fa fa-check" style="font-size:xx-large"></i>';
                html += '</a></div></div></td>';
                html += '<td style="vertical-align: middle;" data-title="action" class="product-action col-md-3">';
                html += '<div><span id="tprice"></span>' + (item.Quantity * item.Price) + ' LE </div>';
                html += '</td>';
                html += '</tr>';

                $('.tbody').html(html);

            });
            $('#TotalPrice').html(totalprice);
            $('.TotalItems').html(totalproducts);
            $('.counter').html(z.length);
        }
        
    });

    function go(key) {
        let x = $(`[data-item=${key}]`).val();
        if (x > 0 && x <= z[key].DBQuantity) {
            z[key].Quantity = x;
            setItemStorage("Cart", z);
            reload();
        }
        else {
            $(`[data-item=${key}]`).css("border", "2px solid red");
        }
    }
    function remove(ProductCode) {
        debugger;
        $.each(z, function (key, item) {
            if (item.Code == ProductCode) {
                let itemIndex = z.indexOf(item);
                removeItemStorage("Cart", itemIndex);
                reload();
            }
        });
    }
    function reload() {
        location.reload();

    }
    function gotoDetails(ProductCode) {
        debugger;
        if (ProductCode.startsWith("S")) {
            window.location = "/Home/SsdDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("R")) {
            window.location = "/Home/RamDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("C")) {
            window.location = "/Home/CaseDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("G")) {
            window.location = "/Home/GraphicsCardDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("PS")) {
            window.location = "/Home/PowerSupplyDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("P")) {
            window.location = "/Home/ProcessorDetails?code=" + ProductCode
        }
        else if (ProductCode.startsWith("M")) {
            window.location = "/Home/MotherboardDetails?code=" + ProductCode
        } else if (ProductCode.startsWith("H")) {
            window.location = "/Home/HddDetails?code=" + ProductCode
        }
    }

    function setItemStorage(itemKey, itemValue) {
        localStorage.setItem(itemKey, JSON.stringify(itemValue));
    }
    function getItemStorage(itemKey) {
        return JSON.parse(localStorage.getItem(itemKey));
    }

    function addValueToItemStorage(itemKey, val) {
        let y = getItemStorage(itemKey);
        y.push(val);
        setItemStorage(itemKey, y);
    }
    function removeItemStorage(itemKey, val) {
        let item = getItemStorage(itemKey);
        item.splice(val, 1);
        setItemStorage(itemKey, item);
    }
</script>